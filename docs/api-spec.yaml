# API Specification for Burnout Risk Prediction System
# Created by Balaji Koneti

openapi: 3.0.3
info:
  title: Burnout Risk Prediction API
  description: |
    A comprehensive API for predicting burnout risk in hybrid and remote teams.
    This API provides endpoints for user authentication, risk prediction, and data management.
  version: 1.0.0
  contact:
    name: Balaji Koneti
    email: balaji.koneti@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://api.burnout-prediction.com/api
    description: Production server

security:
  - BearerAuth: []

paths:
  # Authentication Endpoints
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Create a new user account with email and password
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - firstName
                - lastName
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  minLength: 6
                  example: password123
                firstName:
                  type: string
                  maxLength: 50
                  example: John
                lastName:
                  type: string
                  maxLength: 50
                  example: Doe
                role:
                  type: string
                  enum: [admin, user, manager]
                  default: user
                  example: user
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User registered successfully
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Validation error or user already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      description: Authenticate user with email and password
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Login successful
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/profile:
    get:
      tags:
        - Authentication
      summary: Get user profile
      description: Retrieve current user's profile information
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Authentication
      summary: Update user profile
      description: Update current user's profile information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  maxLength: 50
                  example: John
                lastName:
                  type: string
                  maxLength: 50
                  example: Doe
                email:
                  type: string
                  format: email
                  example: user@example.com
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Profile updated successfully
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Prediction Endpoints
  /predictions:
    post:
      tags:
        - Predictions
      summary: Generate new prediction
      description: Generate a new burnout risk prediction for the current user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                  format: date
                  example: "2024-01-01"
                endDate:
                  type: string
                  format: date
                  example: "2024-01-31"
                additionalData:
                  type: object
                  properties:
                    sleepQuality:
                      type: number
                      minimum: 0
                      maximum: 10
                      example: 7
                    exerciseFrequency:
                      type: number
                      minimum: 0
                      maximum: 10
                      example: 5
                    nutritionQuality:
                      type: number
                      minimum: 0
                      maximum: 10
                      example: 6
                    socialSupport:
                      type: number
                      minimum: 0
                      maximum: 10
                      example: 7
                    jobSatisfaction:
                      type: number
                      minimum: 0
                      maximum: 10
                      example: 6
      responses:
        '201':
          description: Prediction generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Prediction generated successfully
                  data:
                    type: object
                    properties:
                      prediction:
                        $ref: '#/components/schemas/PredictionResult'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /predictions/latest:
    get:
      tags:
        - Predictions
      summary: Get latest prediction
      description: Retrieve the most recent prediction for the current user
      responses:
        '200':
          description: Latest prediction retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      prediction:
                        $ref: '#/components/schemas/PredictionResult'
        '404':
          description: No prediction found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /predictions/history:
    get:
      tags:
        - Predictions
      summary: Get prediction history
      description: Retrieve prediction history for the current user
      parameters:
        - name: limit
          in: query
          description: Maximum number of predictions to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: Prediction history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      predictions:
                        type: array
                        items:
                          $ref: '#/components/schemas/PredictionResult'
                      count:
                        type: integer
                        example: 10

  /predictions/stats:
    get:
      tags:
        - Predictions
      summary: Get prediction statistics
      description: Retrieve statistical summary of predictions for the current user
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      statistics:
                        $ref: '#/components/schemas/PredictionStats'

  # Metadata Endpoints
  /health:
    get:
      tags:
        - Metadata
      summary: Health check
      description: Check the health status of the API
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        example: healthy
                      timestamp:
                        type: string
                        format: date-time
                        example: "2024-01-01T12:00:00Z"
                      uptime:
                        type: object
                        properties:
                          seconds:
                            type: integer
                            example: 3600
                          human:
                            type: string
                            example: "1h 0m 0s"
                      memory:
                        type: object
                        properties:
                          rss:
                            type: integer
                            example: 128
                          heapTotal:
                            type: integer
                            example: 64
                          heapUsed:
                            type: integer
                            example: 32
                          external:
                            type: integer
                            example: 8
                      system:
                        type: object
                        properties:
                          nodeVersion:
                            type: string
                            example: "v18.17.0"
                          environment:
                            type: string
                            example: "production"
                          platform:
                            type: string
                            example: "linux"
                          arch:
                            type: string
                            example: "x64"

  /info:
    get:
      tags:
        - Metadata
      summary: API information
      description: Get general information about the API
      security: []
      responses:
        '200':
          description: API information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "Burnout Risk Prediction API"
                      version:
                        type: string
                        example: "1.0.0"
                      description:
                        type: string
                        example: "API for predicting burnout risk in hybrid and remote teams"
                      author:
                        type: string
                        example: "Balaji Koneti"
                      endpoints:
                        type: object
                        properties:
                          auth:
                            type: object
                            properties:
                              register:
                                type: string
                                example: "POST /api/auth/register"
                              login:
                                type: string
                                example: "POST /api/auth/login"
                              profile:
                                type: string
                                example: "GET /api/auth/profile"
                          predictions:
                            type: object
                            properties:
                              generate:
                                type: string
                                example: "POST /api/predictions"
                              latest:
                                type: string
                                example: "GET /api/predictions/latest"
                              history:
                                type: string
                                example: "GET /api/predictions/history"
                              stats:
                                type: string
                                example: "GET /api/predictions/stats"
                      features:
                        type: array
                        items:
                          type: string
                        example:
                          - "User authentication and authorization"
                          - "Burnout risk prediction using ML models"
                          - "Feature extraction from calendar and email data"
                          - "Personalized recommendations"
                          - "Risk trend analysis"
                          - "Real-time health monitoring"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "60f7b3b3b3b3b3b3b3b3b3b3"
        email:
          type: string
          format: email
          example: "user@example.com"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        role:
          type: string
          enum: [admin, user, manager]
          example: "user"
        isActive:
          type: boolean
          example: true
        lastLogin:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"

    PredictionResult:
      type: object
      properties:
        id:
          type: string
          example: "60f7b3b3b3b3b3b3b3b3b3b4"
        predictionDate:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"
        riskLevel:
          type: string
          enum: [low, medium, high, critical]
          example: "medium"
        riskScore:
          type: number
          minimum: 0
          maximum: 100
          example: 65
        confidence:
          type: number
          minimum: 0
          maximum: 1
          example: 0.85
        factors:
          $ref: '#/components/schemas/RiskFactors'
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/Recommendation'
        dataPoints:
          $ref: '#/components/schemas/DataPoints'
        modelVersion:
          type: string
          example: "1.0.0"
        isActive:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"

    RiskFactors:
      type: object
      properties:
        workload:
          type: number
          minimum: 0
          maximum: 10
          example: 7
        stressLevel:
          type: number
          minimum: 0
          maximum: 10
          example: 6
        workLifeBalance:
          type: number
          minimum: 0
          maximum: 10
          example: 5
        socialSupport:
          type: number
          minimum: 0
          maximum: 10
          example: 6
        jobSatisfaction:
          type: number
          minimum: 0
          maximum: 10
          example: 7
        physicalHealth:
          type: number
          minimum: 0
          maximum: 10
          example: 6
        mentalHealth:
          type: number
          minimum: 0
          maximum: 10
          example: 5
        sleepQuality:
          type: number
          minimum: 0
          maximum: 10
          example: 6
        exerciseFrequency:
          type: number
          minimum: 0
          maximum: 10
          example: 4
        nutritionQuality:
          type: number
          minimum: 0
          maximum: 10
          example: 5

    Recommendation:
      type: object
      properties:
        priority:
          type: string
          enum: [high, medium, low]
          example: "high"
        category:
          type: string
          enum: [workload, stress, lifestyle, social, health]
          example: "workload"
        title:
          type: string
          example: "Reduce Meeting Overload"
        description:
          type: string
          example: "You have 15+ meetings this week. Consider consolidating or eliminating unnecessary meetings."
        actionItems:
          type: array
          items:
            type: string
          example:
            - "Audit your meetings and cancel unnecessary ones"
            - "Combine related meetings when possible"
            - "Set meeting time limits and stick to them"
        resources:
          type: array
          items:
            type: string
          example:
            - "https://example.com/meeting-optimization-guide"
            - "https://example.com/async-communication-tools"

    DataPoints:
      type: object
      properties:
        calendarEvents:
          type: integer
          minimum: 0
          example: 25
        emailMessages:
          type: integer
          minimum: 0
          example: 150
        surveyResponses:
          type: integer
          minimum: 0
          example: 5
        biometricData:
          type: integer
          minimum: 0
          example: 10

    PredictionStats:
      type: object
      properties:
        totalPredictions:
          type: integer
          example: 30
        riskLevelCounts:
          type: object
          properties:
            low:
              type: integer
              example: 10
            medium:
              type: integer
              example: 15
            high:
              type: integer
              example: 4
            critical:
              type: integer
              example: 1
        avgRiskScore:
          type: number
          example: 45.5
        avgConfidence:
          type: number
          example: 0.82
        latestRiskLevel:
          type: string
          example: "medium"
        latestRiskScore:
          type: number
          example: 65
        latestConfidence:
          type: number
          example: 0.85

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "An error occurred"
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                example: "email"
              message:
                type: string
                example: "Invalid email format"

tags:
  - name: Authentication
    description: User authentication and profile management
  - name: Predictions
    description: Burnout risk prediction and analysis
  - name: Metadata
    description: System information and health checks
