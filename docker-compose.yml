version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: burnout-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-burnout}
      POSTGRES_USER: ${POSTGRES_USER:-burnout}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-burnout}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 10s
      timeout: 5s
      retries: 5

  ml-service:
    build: ./ml
    container_name: burnout-ml
    restart: unless-stopped
    environment:
      PYTHONPATH: /app/src
    volumes:
      - ./ml/models:/app/models
    ports:
      - '8001:8001'

  backend:
    build: ./backend-nest
    container_name: burnout-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      ml-service:
        condition: service_started
    environment:
      PORT: 3001
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER:-burnout}:${POSTGRES_PASSWORD:-burnout}@postgres:5432/${POSTGRES_DB:-burnout}}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET:-super-secret-access-key}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-super-secret-refresh-key}
      JWT_ACCESS_EXPIRES: ${JWT_ACCESS_EXPIRES:-900}
      JWT_REFRESH_EXPIRES: ${JWT_REFRESH_EXPIRES:-604800}
      ML_SERVICE_URL: http://ml-service:8001
    command: sh -c "npx prisma migrate deploy && node dist/main.js"
    ports:
      - '3001:3001'

  frontend:
    build: ./frontend-next
    container_name: burnout-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://backend:3001
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-replace-with-strong-secret}
    ports:
      - '3000:3000'

volumes:
  pgdata:
